   this.prevPos ={x:0,y:0,angle:0,rotation:0};

   if (data.joinID === scene.joinID){
         scene.prevPos = {
            x: player.x,
            y: player.y,
            angle: player.angle,
            rotation: player.rotation
         }
      }

   /*this.checkCollision = function(){
      if (scene.playerList[scene.joinID]){
         let player = scene.playerList[scene.joinID].sprite;

         if (scene.prevPos && (player.body.position.x!==scene.prevPos.x || player.body.position.y!==scene.prevPos.y 
            || player.body.position.angle!==scene.prevPos.angle || player.body.position.rotation!==scene.prevPos.rotation)){
            console.log(1)
            scene.prevPos ={x:player.x,y:player.y,angle:player.angle,rotation:player.rotation};
            scene.client.send({type:'t', playerID:scene.joinID, gameID:1, x:player.x, y:player.y, angle:player.angle, rotation:player.rotation});
         }
      }
   }

   this.collisionPlayer = function(data){
      let player = scene.playerList[data.playerID].sprite; //change back to joinID

      player.x = data.x;
      player.y = data.y;
      player.angle = data.angle;
   }

   // this.matter.world.on('collisionstart',function(event,bodyA,bodyB){
      //    //console.log(event);
      //    let player = self.playerList[self.joinID].sprite;

      //    if(player.body===bodyA.parent || player.body===bodyB.parent){
            
      //       client.send({type:'t', playerID:self.joinID, gameID:1, x:player.x, y:player.y, angle:player.angle, rotation:player.rotation});
      //    }
      // });
*/





/*********************************************** WINDOWS FUNCTIONS ***********************************************/
	    /*Send a message to server when restarting or leaving the page*/
	    // window.onbeforeunload = function(){
	    // 	//self.ws.send(JSON.stringify({type:"leave", playerID: self.id, gameID: 1}));
	    // //	console.log('nbefore');
	    // }

	    // Close websocket connection when restarting or leaving the page
	    // window.onunload = function () { 
	    // 	console.log('nafter');
	    // 	//self.ws.close();
   		// }

   		// window.onload = function(){
   		// 	console.log('nload');
   		// }
/*
   		window.onfocus = function(){
   			//console.log('focused');
   		}*/

   		// window.onpagehide = function(){
   		// 	console.log('hidden');
   		// }
   		/*document.addEventListener("visibilitychange", function(){
   			if (document.hidden){console.log('hide');}
   			else{console.log('not hide');}
   		});*/

